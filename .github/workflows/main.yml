name: shikushiku downloader

on:
  workflow_dispatch:
    inputs:
      video_id:
        description: "NicoNico Video ID (e.g., sm9)"
        required: true
      title:
        description: "Custom title for the MP3 (e.g., My Awesome Song)"
        required: false

jobs:
  fetch_and_download:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          # 必要なツールをインストール
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip curl ffmpeg jq imagemagick

          # Pythonライブラリをインストール
          pip3 install requests

          # yt-dlp をインストール
          sudo curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp
          sudo chmod a+rx /usr/local/bin/yt-dlp

      - name: Download Video and Thumbnail
        run: |
          video_id="${{ github.event.inputs.video_id }}"
          mkdir -p downloads
          
          # 動画をダウンロード
          yt-dlp "https://www.nicovideo.jp/watch/${video_id}" --cookies cookies.txt -o "downloads/${video_id}.%(ext)s"

          # サムネイルをダウンロード
          # yt-dlpを使って最も適切なサムネイルを取得
          yt-dlp "https://www.nicovideo.jp/watch/${video_id}" --cookies cookies.txt --write-thumbnail --skip-download --output "downloads/${video_id}.%(ext)s"
          
          # ダウンロードされたサムネイルのファイル名を取得
          thumbnail_file=$(find downloads -name "${video_id}.*" -print -quit | grep -E '\.(jpg|jpeg|png|webp|gif)$')

          if [ -z "$thumbnail_file" ]; then
            echo "Warning: Thumbnail not found for ID ${video_id}. Attempting fallback."
            # Fallback: NicoNicoのサムネイルURLの一般的な形式を試す
            curl -L "https://tn.nicovideo.jp/smile?i=${video_id##sm}&s=M" -o downloads/${video_id}.jpg
            thumbnail_file="downloads/${video_id}.jpg"
          fi

          # サムネイルをPNG形式に変換 (FFmpegで埋め込みやすい形式)
          convert "$thumbnail_file" downloads/thumbnail.png

      - name: Convert to MP3 and Add Metadata
        run: |
          video_id="${{ github.event.inputs.video_id }}"
          title="${{ github.event.inputs.title }}"
          
          # ダウンロードされた動画ファイルを見つける
          video_file=$(find downloads -name "${video_id}.*" -print -quit | grep -vE '\.(jpg|jpeg|png|webp|gif)$')

          if [ -z "$video_file" ]; then
            echo "Error: Video file not found for ID ${video_id}"
            exit 1
          fi

          output_mp3="downloads/${video_id}.mp3"
          
          # FFmpegを使ってMP3に変換し、最高音質を設定、タイトルとアルバムアートを埋め込む
          ffmpeg -i "$video_file" -i downloads/thumbnail.png -map 0:a -map 1:v \
            -codec:a libmp3lame -q:a 0 \
            -metadata:s:v comment="Cover (Front)" \
            $(if [ -n "$title" ]; then echo "-metadata title=\"$title\""; fi) \
            "$output_mp3"
          
          # 元の動画ファイルとサムネイルファイルをクリーンアップ
          rm "$video_file"
          rm downloads/thumbnail.png
          find downloads -name "${video_id}.*" -print -quit | grep -E '\.(jpg|jpeg|png|webp|gif)$' | xargs rm -f

      - name: Upload MP3 to Repository
        run: |
          video_id="${{ github.event.inputs.video_id }}"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # ダウンロードしたMP3をコミットしてプッシュ
          git add "downloads/${video_id}.mp3"
          git commit -m "Add downloaded MP3 with thumbnail: ${video_id}"
          git push

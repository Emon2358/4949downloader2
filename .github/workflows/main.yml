name: shikushiku downloader

on:
  workflow_dispatch:
    inputs:
      video_id:
        description: "NicoNico Video ID (e.g., sm9)"
        required: true

jobs:
  fetch_and_download:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: |
          # 必要なツールをインストール
          sudo apt-get update
          sudo apt-get install -y python3 python3-pip curl ffmpeg jq

          # Pythonライブラリをインストール
          pip3 install requests

          # yt-dlp をインストール
          sudo curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o /usr/local/bin/yt-dlp
          sudo chmod a+rx /usr/local/bin/yt-dlp

      - name: Download Video
        run: |
          video_id="${{ github.event.inputs.video_id }}"
          mkdir -p downloads
          # yt-dlp で動画をダウンロード
          yt-dlp "https://www.nicovideo.jp/watch/${video_id}" --cookies cookies.txt -o "downloads/${video_id}.mp4"

      - name: Convert to MP3
        run: |
          video_id="${{ github.event.inputs.video_id }}"
          input_mp4="downloads/${video_id}.mp4"
          output_mp3="downloads/${video_id}.mp3"

          # ダウンロードしたMP4ファイルが存在するか確認
          if [ ! -f "$input_mp4" ]; then
            echo "Error: MP4 file not found at $input_mp4"
            exit 1
          fi

          # FFmpeg を使ってMP4を最高音質のMP3に変換
          # -q:a 0 は最高品質のVBR (Variable Bit Rate) を設定します
          # -codec:a libmp3lame はMP3エンコーダーを指定します
          ffmpeg -i "$input_mp4" -codec:a libmp3lame -q:a 0 "$output_mp3"

          # 元のMP4ファイルを削除
          rm "$input_mp4"
          echo "Converted $input_mp4 to $output_mp3 and removed original MP4."

      - name: Upload MP3 to Repository
        run: |
          video_id="${{ github.event.inputs.video_id }}"
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # ダウンロードしたMP3をコミットしてプッシュ
          if [ -f "downloads/${video_id}.mp3" ]; then
            git add "downloads/${video_id}.mp3"
            git commit -m "Add downloaded MP3: ${video_id}"
            git push
            echo "MP3 uploaded successfully."
          else
            echo "Error: MP3 file downloads/${video_id}.mp3 not found for upload."
            exit 1
          fi
